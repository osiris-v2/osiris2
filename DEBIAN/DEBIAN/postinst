#!/usr/bin/bash

echo "Post Install File"

cat /tmp/osiris2_install_vars

# Verificar si el archivo temporal existe
if [ -f /tmp/osiris2_install_vars ]; then
    echo "Leyendo Mensaje Preinstall ..."
    
    # Leer las líneas del archivo en un arreglo
    mapfile -t lines < /tmp/osiris2_install_vars

    # Mostrar las líneas leídas para verificar
    echo "Action: ${lines[0]}"
    echo "Path: ${lines[1]}"
    echo "VN: ${lines[2]}"
    # Verificar si la primera línea es "EXEC"
    if [[ ${lines[0]} == "EXEC" ]]; then
        
        # Obtener el archivo de la segunda línea
        BASE_ARCHIVO="${lines[1]}/osiris.inst"

          
 
          
      echo "Trying Execute ${lines[1]}/osiris.inst"
       base=${lines[1]}
        # Verificar si la base del archivo no está vacía y si el archivo existe
        if [[ -f "$BASE_ARCHIVO" ]]; then
            echo "Entrando en osiris"
 #           echo "Directorio actual: $PWD"


           cd  $base || exit 1  # Cambiar al directorio bin, saliendo si falla
           chmod +x $BASE_ARCHIVO
           chmod 0777 $BASE_ARCHIVO
            cd $base
            ls -m
            sudo rm -f /var/lib/dpkg/lock
            sudo rm -f /var/lib/dpkg/lock-frontend
           echo "################################################"
           echo "Ejecute: .${BASE_ARCHIVO}                       "                
           echo "  Para lanzar el instalador interno de osiris   "
           echo "################################################"
           exit 0
           sudo ./osiris.inst "--from-deb"
        else
            echo "El archivo especificado en la segunda línea no existe o está vacío."
        fi
    else
        echo "La primera línea no es 'EXEC'. No se ejecutará el archivo."
    fi

    # Eliminar el archivo temporal
    rm /tmp/osiris2_install_vars
else
    echo "No se encontró el archivo temporal."
fi

echo "END OF INSTALLER"

exit 0

